<!-- $Revision: 1.2 $ -->
<refentry id="package.http.http-request.intro">
 <refnamediv>
  <refname>Introduction</refname>
  <refpurpose>
   Introduction to <classname>AsteriskManager</classname>
  </refpurpose>
 </refnamediv>

 <refsect1 id="package.networking.asterisk-manager.intro.overview">
  <title>Overview</title>

  <para>
   This package aims to give the <acronym>PHP</acronym> developer the 
   ability to control their Asterisk <acronym>PBX</acronym> from their <acronym>PHP</acronym> application/script.
  </para>
  <para>
   The available features thus far are:
   <itemizedlist>
    <listitem>
     <simpara>
     Originating calls between a handset and an external channel.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     Queue status queries and manipulation of queue members.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     Call monitoring.
     </simpara>
    </listitem>
   </itemizedlist>
</para>
 </refsect1>

 <refsect1 id="package.http.http-request.intro.examples">
  <title>A few examples</title>

  <example>
   <title>
    Fetches <ulink url="http://yahoo.com/">yahoo.com</ulink> and
    displays it
   </title>

   <programlisting role="php">
require_once "HTTP/Request.php";

$req =&amp; new HTTP_Request("http://www.yahoo.com/");
if (!PEAR::isError($req->sendRequest())) {
    echo $req->getResponseBody();
}
   </programlisting>
  </example>


  <example>
   <title>Fetching two website in a row</title>

   <para>
    In this example, two websites are fetched and displayed. To the
    first one a POST parameter is passed. The POST data stack is
    cleared before the second website is fetched.
   </para>

   <programlisting role="php">
require_once "HTTP/Request.php";

$req =&amp; new HTTP_Request("http://www.php.net");
$req->setMethod(HTTP_REQUEST_METHOD_POST);
$req->addPostData("Foo", "bar");
if (!PEAR::isError($req->sendRequest())) {
     $response1 = $req->getResponseBody();
} else {
     $response1 = "";
}
     
$req->setMethod(HTTP_REQUEST_METHOD_GET);
$req->setURL("http://pear.php.net");
$req->clearPostData();
if (!PEAR::isError($req->sendRequest())) {
     $response2 = $req->getResponseBody();
} else {
     $response2 = "";
}

echo $response1;
echo $response2;
   </programlisting>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->  
